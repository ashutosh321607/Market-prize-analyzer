{"version":3,"sources":["logo.svg","dashboard/card/row.js","dashboard/card/cardHeader.js","dashboard/card/Card.js","dashboard/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["RowsGrid","props","style","height","width","current_price","expected","growth","ImgMediaCard","change","CardHeader","avatar","color","subheader","title","useStyles","makeStyles","root","maxWidth","classes","Card","className","Change","CardActionArea","CardMedia","component","alt","image","Image","CardContent","Typography","gutterBottom","variant","name","price","per","CardActions","href","link","target","Button","data","require","theme","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","backgroundColor","palette","mode","grey","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","giveField","fields","i","Object","keys","length","push","Grid","item","md","Dashboard","useState","field","setField","React","open","setOpen","toggleDrawer","clsx","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","onClick","noWrap","Drawer","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","ListSubheader","inset","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wgu6CAAe,I,8NCEA,SAASA,EAASC,GAC/B,OACE,sBAAKC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,QAArC,UACE,8CADF,MAC0BH,EAAMI,cAC9B,uBACA,0DAHF,MAGsCJ,EAAMK,SAH5C,IAGuDL,EAAMM,OAH7D,KAGsE,0B,+CCW3D,SAASC,EAAaP,GACnC,OAAIA,EAAMQ,QAAU,EAEhB,cAACC,EAAA,EAAD,CACEC,OAAQ,cAAC,IAAD,CAAaT,MAAO,CAAEU,MAAO,WACrCC,UAAU,4BACVC,MAAM,YAKR,cAACJ,EAAA,EAAD,CACEC,OAAQ,cAAC,IAAD,CAAaT,MAAO,CAAEU,MAAO,SACrCC,UAAU,4BACVC,MAAM,SCnBd,IAAMC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,OAIC,SAASV,EAAaP,GACnC,IAAMkB,EAAUJ,IAEhB,OACE,eAACK,EAAA,EAAD,CAAMC,UAAWF,EAAQF,KAAzB,UACE,cAAC,EAAD,CAAQR,OAAQR,EAAMqB,SACtB,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,UAAU,MACVC,IAAI,SACJC,MAAO1B,EAAM2B,MACbd,MAAM,WAER,eAACe,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKP,UAAU,KAAhD,SACGxB,EAAMgC,OAET,cAAC,EAAD,CACE5B,cAAeJ,EAAMiC,MACrB5B,SAAUL,EAAMK,SAChBC,OAAQN,EAAMkC,YAIpB,cAACC,EAAA,EAAD,UACE,mBAAGC,KAAMpC,EAAMqC,KAAMC,OAAO,SAA5B,SACE,cAACC,EAAA,EAAD,CAAQR,QAAQ,YAAYpB,MAAM,UAAUa,UAAU,OAAtD,SACE,kD,2FChBRgB,EAAOC,EAAQ,IAIb3B,EAAYC,aAAW,SAAC2B,GAAD,MAAY,CACvC1B,KAAM,CACJ2B,QAAS,QAEXC,QAAS,CACPC,aAAc,IAEhBC,YAAY,aACVH,QAAS,OACTI,WAAY,SACZC,eAAgB,WAChBC,QAAS,SACNP,EAAMQ,OAAON,SAElBO,OAAQ,CACNC,OAAQV,EAAMU,OAAOC,OAAS,EAC9BC,WAAYZ,EAAMa,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQf,EAAMa,YAAYE,OAAOC,MACjCC,SAAUjB,EAAMa,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,WAxBgB,IAyBhB3D,MAAM,eAAD,OAzBW,IAyBX,OACLmD,WAAYZ,EAAMa,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQf,EAAMa,YAAYE,OAAOC,MACjCC,SAAUjB,EAAMa,YAAYI,SAASI,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,iBAAkB,CAChBvB,QAAS,QAEX9B,MAAO,CACLsD,SAAU,GAEZC,YAAa,CACXC,SAAU,WACVC,WAAY,SACZnE,MA3CgB,IA4ChBmD,WAAYZ,EAAMa,YAAYC,OAAO,QAAS,CAC5CC,OAAQf,EAAMa,YAAYE,OAAOC,MACjCC,SAAUjB,EAAMa,YAAYI,SAASI,kBAGzCQ,iBAAiB,aACfC,UAAW,SACXlB,WAAYZ,EAAMa,YAAYC,OAAO,QAAS,CAC5CC,OAAQf,EAAMa,YAAYE,OAAOC,MACjCC,SAAUjB,EAAMa,YAAYI,SAASC,gBAEvCzD,MAAOuC,EAAM+B,QAAQ,IACpB/B,EAAMgC,YAAYC,GAAG,MAAQ,CAC5BxE,MAAOuC,EAAM+B,QAAQ,KAGzBG,aAAclC,EAAMQ,OAAON,QAC3BiC,QAAS,CACPC,gBACyB,UAAvBpC,EAAMqC,QAAQC,KACVtC,EAAMqC,QAAQE,KAAK,KACnBvC,EAAMqC,QAAQE,KAAK,KACzBd,SAAU,EACVjE,OAAQ,QACRgF,SAAU,QAEZC,UAAW,CACTC,WAAY1C,EAAM+B,QAAQ,GAC1BY,cAAe3C,EAAM+B,QAAQ,IAE/Ba,MAAO,CACLrC,QAASP,EAAM+B,QAAQ,GACvB9B,QAAS,OACTuC,SAAU,OACVK,cAAe,UAEjBC,YAAa,CACXtF,OAAQ,SAIZ,SAASuF,GAAUjD,GAEjB,IADA,IAAMkD,EAAS,GACNC,EAAI,EAAGA,EAAIC,OAAOC,KAAKrD,EAAI,MAAUsD,OAAQH,IACpDD,EAAOK,KACL,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CACElE,KAAMQ,EAAI,KAASmD,GACnB1D,MAAOO,EAAI,MAAUmD,GACrBtF,SAAUmC,EAAI,SAAamD,GAC3BtE,OAAQmB,EAAI,OAAWmD,GACvBzD,IAAKM,EAAK,eAAemD,GACzBhE,MAAOa,EAAI,MAAUmD,GACrBtD,KAAMG,EAAI,KAASmD,QAK3B,OAAOD,EAEM,SAASS,KACtB,IAAMjF,EAAUJ,IADkB,EAERsF,mBAASX,GAAUjD,IAFX,mBAE3B6D,EAF2B,KAEpBC,EAFoB,OAGVC,YAAe,GAHL,mBAG3BC,EAH2B,KAGrBC,EAHqB,KAI5BC,EAAe,WACnBD,GAASD,IAEcG,YAAKzF,EAAQoE,MAAOpE,EAAQsE,aAErD,OACE,sBAAKpE,UAAWF,EAAQF,KAAxB,UACE,cAAC4F,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACExC,SAAS,WACTjD,UAAWuF,YAAKzF,EAAQiC,OAAQqD,GAAQtF,EAAQ2C,aAFlD,SAIE,eAACiD,EAAA,EAAD,CAAS1F,UAAWF,EAAQ0B,QAA5B,UACE,cAACmE,EAAA,EAAD,CACEC,KAAK,QACLrG,MAAM,UACNsG,aAAW,cACXC,QAASR,EACTtF,UAAWuF,YACTzF,EAAQ8C,WACRwC,GAAQtF,EAAQgD,kBAPpB,SAUE,cAAC,IAAD,MAEF,cAACrC,EAAA,EAAD,CACEL,UAAU,KACVO,QAAQ,KACRpB,MAAM,UACNwG,QAAM,EACN/F,UAAWF,EAAQL,MALrB,yCAWJ,eAACuG,EAAA,EAAD,CACErF,QAAQ,YACRb,QAAS,CACPoE,MAAOqB,YAAKzF,EAAQkD,aAAcoC,GAAQtF,EAAQqD,mBAEpDiC,KAAMA,EALR,UAOE,qBAAKpF,UAAWF,EAAQ4B,YAAxB,SACE,cAACiE,EAAA,EAAD,CAAYG,QAASR,EAArB,SACE,cAAC,IAAD,QAGJ,cAACW,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACE,8BACE,eAACC,EAAA,EAAD,CAAUC,QAAM,EAACN,QAAS,WACpBZ,EAAUb,GAAUhD,EAAQ,OADlC,UAGE,cAACgF,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,gBAI5B,cAACN,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACE,gCACE,cAACM,EAAA,EAAD,CAAeC,OAAK,EAApB,kCACA,eAACN,EAAA,EAAD,CAAUC,QAAM,EAACN,QAAS,WACpBZ,EAAUb,GAAUhD,EAAQ,OADlC,UAGE,cAACgF,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAEEC,QAAQ,gBAGZ,eAACJ,EAAA,EAAD,CAAUC,QAAM,EAACN,QAAS,WACpBZ,EAAUb,GAAUhD,EAAQ,OADlC,UAGE,cAACgF,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,sBAK9B,uBAAMvG,UAAWF,EAAQ2D,QAAzB,UACE,qBAAKzD,UAAWF,EAAQ0D,eACxB,cAACkD,EAAA,EAAD,CAAW7G,SAAS,KAAKG,UAAWF,EAAQiE,UAA5C,SACE,cAACa,EAAA,EAAD,CAAMb,WAAS,EAACV,QAAS,EAAzB,SACG4B,YC7ME0B,OAtBf,WACE,OACE,qBAAK3G,UAAU,MAAf,SAeE,cAAC+E,GAAD,OCTS6B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.df8db29e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import * as React from \"react\";\n\nexport default function RowsGrid(props) {\n  return (\n    <div style={{ height: \"120%\", width: \"100%\" }}>\n      <b>Current Price</b> : {props.current_price}\n      <br />\n      <b>Expected Price(in 3 days)</b> : {props.expected}({props.growth}%)<br />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Row from \"./row\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\nimport PanToolIcon from '@material-ui/icons/PanTool';\n\nexport default function ImgMediaCard(props) {\n  if (props.change >= 0) {\n    return (\n      <CardHeader\n        avatar={<ThumbUpIcon style={{ color: \"Green\" }} />}\n        subheader=\"Price is Expected to Rise\"\n        title=\"Buy Now\"\n      />\n    );\n  } else {\n    return (\n      <CardHeader\n        avatar={<PanToolIcon style={{ color: \"Red\" }} />}\n        subheader=\"Price is Expected to Drop\"\n        title=\"Wait\"\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Row from \"./row\";\nimport Header from \"./cardHeader\";\nimport { Link, Route } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  }\n});\n\nexport default function ImgMediaCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <Header change={props.Change} />\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Laptop\"\n          image={props.Image}\n          title=\"Laptop\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h6\" component=\"h8\">\n            {props.name}\n          </Typography>\n          <Row\n            current_price={props.price}\n            expected={props.expected}\n            growth={props.per}\n          />\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <a href={props.link} target=\"_blank\">\n          <Button variant=\"contained\" color=\"primary\" component=\"span\">\n            <b>view Now</b>\n          </Button>\n        </a>\n      </CardActions>\n    </Card>\n  );\n}\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport Card from \"./card/Card\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\n\nlet data = require(\"../data/Top_Picks_Flipkart.json\");\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    backgroundColor:\n      theme.palette.mode === \"light\"\n        ? theme.palette.grey[100]\n        : theme.palette.grey[900],\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nfunction giveField(data) {\n  const fields = [];\n  for (let i = 0; i < Object.keys(data[\"Name\"]).length; i++) {\n    fields.push(\n      <Grid item md={4}>\n        <Card\n          name={data[\"Name\"][i]}\n          price={data[\"Price\"][i]}\n          expected={data[\"Forecast\"][i]}\n          Change={data[\"Change\"][i]}\n          per={data[\"Change in %\"][i]}\n          Image={data[\"Image\"][i]}\n          link={data[\"Link\"][i]}\n        />\n      </Grid>\n    );\n  }\n  return fields;\n}\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [field, setField] = useState(giveField(data));\n  const [open, setOpen] = React.useState(true);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={toggleDrawer}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            Laptop Price Predictor\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={toggleDrawer}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <div>\n            <ListItem button onClick={() => {\n                  setField((giveField(require(\"../data/Top_Picks_Flipkart.json\")))) ;\n                }}>\n              <ListItemIcon>\n                <HomeIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Home\" />\n            </ListItem>\n          </div>\n        </List>\n        <Divider />\n        <List>\n          <div>\n            <ListSubheader inset>E-commerce Platforms</ListSubheader>\n            <ListItem button onClick={() => {\n                  setField((giveField(require(\"../data/Flipkart_Forecast.json\")))) ;\n                }}>\n              <ListItemIcon>\n                <ShoppingCartIcon />\n              </ListItemIcon>\n              <ListItemText\n                \n                primary=\"Flipkart\"\n              />\n            </ListItem>\n            <ListItem button onClick={() => {\n                  setField((giveField(require(\"../data/Amazon_Forecast.json\")))) ;\n                }}>\n              <ListItemIcon>\n                <LocalMallIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Amazon\" />\n            </ListItem>\n          </div>\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={4}>\n            {field}\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport './dashboard/Dashboard'\nimport Dashboard from './dashboard/Dashboard';\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}